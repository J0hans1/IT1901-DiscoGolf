@startuml Sequence diagram

actor Player
control MainPageController
control ScorecardPageController
participant Scorecard
participant Course
participant Hole
participant DataAccess
control DiscoRestController
participant DiscoRestServie
participant DiscoGolfPersistence
dataBase Database

Player -> MainPageController: Write name and choose course
MainPageController -> ScorecardPageController: changeSceneToScorecard()
activate Scorecard
activate Course
activate Hole

ScorecardPageController -> Scorecard: getCourse()
Scorecard -> Course: getHole(currentHoleNumber)
Course -> Hole: AddThrow() 
Hole -> Hole: update throws in Hole class
ScorecardPageController -> Scorecard: nextHole()
Scorecard -> ScorecardPageController: Update current hole and total score
activate DataAccess
ScorecardPageController -> DataAccess: handleSubmit()
DataAccess -> DiscoRestController: RequestPostingScorecard(scorecard)
activate DiscoRestServie
DiscoRestController -> DiscoRestServie: submit(scorecard)
activate DiscoGolfPersistence
DiscoRestServie -> DiscoGolfPersistence: addScorecard(scorecard)
DiscoGolfPersistence -> Database: sendScorecardToDatabase(scorecard)
ScorecardPageController -> MainPageController: Player is sent back to main page
MainPageController -> Player: Player sees feedback for saved game
deactivate Scorecard
deactivate Course
deactivate Hole

@endulm


@startuml class diagram

class Scorecard
+ int holeNumber
+ int totalScore

@enduml